name: Publish

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'Release version (with v)'
        required: false
        default: ''
        type: string
      # includePrerelease:
      #   description: 'Whether or not to include prerelease when getting latest'
      #   required: false
      #   default: true
      #   type: boolean

permissions:
  contents: write

jobs:
  build:
    name: Publish
    runs-on: ubuntu-latest
    steps:
    - name: Download linux zip
      uses: robinraju/release-downloader@v1.8
      with: 
        latest: ${{ github.event.inputs.releaseTag == '' }}
        # preRelease: ${{ github.event.inputs.includePrerelease }}
        tag: ${{ github.event.inputs.releaseTag }}
        # The name of the file to download.
        # Use this field only to specify filenames other than tarball or zipball, if any.
        # Supports wildcard pattern (eg: '*', '*.deb', '*.zip' etc..)
        fileName: "alchemy-unbound-*.zip"
        out-file-path: "out"
        extract: false
        token: ${{ secrets.GITHUB_TOKEN }}
    # - name: Download linux zip
    #   uses: robinraju/release-downloader@v1.8
    #   with: 
    #     latest: ${{ github.event.inputs.releaseTag == '' }}
    #     # preRelease: ${{ github.event.inputs.includePrerelease }}
    #     tag: ${{ github.event.inputs.releaseTag }}
    #     # The name of the file to download.
    #     # Use this field only to specify filenames other than tarball or zipball, if any.
    #     # Supports wildcard pattern (eg: '*', '*.deb', '*.zip' etc..)
    #     fileName: "alchemy-unbound-linux*.zip"
    #     out-file-path: "out/linux"
    #     extract: false
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #- name: Download windows zip
    #  uses: robinraju/release-downloader@v1.8
    #  with: 
    #    latest: ${{ github.event.inputs.releaseTag == '' }}
    #    # preRelease: ${{ github.event.inputs.includePrerelease }}
    #    tag: ${{ github.event.inputs.releaseTag }}
    #    # The name of the file to download.
    #    # Use this field only to specify filenames other than tarball or zipball, if any.
    #    # Supports wildcard pattern (eg: '*', '*.deb', '*.zip' etc..)
    #    fileName: "alchemy-unbound-win32*.zip"
    #    out-file-path: "out/windows"
    #    extract: false
    #    token: ${{ secrets.GITHUB_TOKEN }}
    - name: Debug used variables
      run: |
          echo $github
          echo $prerelease
          echo $created
      env:
          github: ${{ tojson(github) }}
          prerelease: ${{ github.event.release.prerelease }}
          created: ${{ github.event.release.created_at }}
    - name: extract things
      run: |
        unzip -o ./out/alchemy-unbound-linux*.zip -d ./out/linux || true
        zip -FF ./out/alchemy-unbound-win32*.zip --out ./out/alchemy-unbound-win32-fixed.zip -fz || true
        unzip -o ./out/alchemy-unbound-win32-fixed.zip -d ./out/win32 || true
    - name: Debug out dir
      run: ls out
    - name: Debug linux dir
      run: ls out/linux
    - name: Debug win32 dir
      run: ls out/win32
    # - name: Set prerelease branch
    #   if: ${{ github.event.release.prerelease }}
    #   run: echo 'RELEASE_BRANCH=prerelease' >> "$GITHUB_ENV"
    # - name: Set release branch
    #   if: ${{ !github.event.release.prerelease }}
    #   run: echo 'RELEASE_BRANCH=release' >> "$GITHUB_ENV"
    # - uses: game-ci/steam-deploy@v3
    #   with:
    #     username: ${{ secrets.STEAM_USERNAME }}          
    #     configVdf: ${{ secrets.STEAM_CONFIG_VDF }}          
    #     appId: 2858840
    #     buildDescription: ${{ github.event.release.tag_name }}
    #     rootPath: out
    #     depot2Path: alchemy-unbound-win32-x64
    #     depot3Path: alchemy-unbound-linux-x64
    #     releaseBranch: ${{ env.RELEASE_BRANCH }}
